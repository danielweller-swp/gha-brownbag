name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  deploy:
    defaults:
      run:
        working-directory: hello-world
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1

      - run: npm ci

      - run: npm run lint

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SOFTWAREPARK_SANDBOX_SERVICE_ACCOUNT }}
          project_id: softwarepark-sandbox
          export_default_credentials: true

      - name: Deploy gha-sandbox-hello-world
        run: >-
          gcloud functions deploy
          gha-sandbox-hello-world
          --trigger-http
          --runtime=nodejs12
          --entry-point helloWorld
          --set-env-vars=MESSAGE="${{ secrets.HELLO_WORLD_MESSAGE }}"

      - name: Set policy for gha-sandbox-hello-world
        run: >-
          gcloud functions set-iam-policy
          gha-sandbox-hello-world
          policy.json

  test-only:
    name: Only test the function with the composite action
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1

      - uses: ./.github/actions/deploy-node-gcf
        with:
          working-directory: hello-world
          lint: false
          deploy: false

  deploy-with-action:
    needs: [deploy] # We don't want to deploy the same function twice in parallel
    name: Deploy the function with the composite action
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1

      - uses: ./.github/actions/deploy-node-gcf
        with:
          working-directory: hello-world
          entry-point: helloWorld
          name: gha-sandbox-hello-world
          env-vars: MESSAGE="${{ secrets.HELLO_WORLD_MESSAGE }}"