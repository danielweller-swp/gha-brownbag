name: CI/CD

on: [workflow_dispatch, push, pull_request]

jobs:
  ci-hello-world:
    name: CI for hello-world
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hello-world

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1

      - name: Install Dependencies
        run: npm ci

      - name: Test
        run: npm run test

      - name: Lint
        run: npm run lint

  ci-hello-world-with-action:
    name: CI for hello-world with the composite action
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1

      - uses: ./.github/actions/ci-node-gcf
        with:
          working-directory: hello-world

  deploy-hello-world-staging:
    if: github.ref == 'refs/heads/main'
    environment: Staging
    env:
      ENVIRONMENT_PREFIX: staging
    needs: [ci-hello-world, ci-hello-world-with-action]
    defaults:
      run:
        working-directory: hello-world
    name: Deploy hello-world to Staging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SOFTWAREPARK_SANDBOX_SERVICE_ACCOUNT }}
          project_id: softwarepark-sandbox
          export_default_credentials: true

      - name: Deploy gha-sandbox-hello-world
        run: >-
          gcloud functions deploy
          gha-sandbox-${{ env.ENVIRONMENT_PREFIX }}-hello-world
          --trigger-http
          --runtime=nodejs12
          --entry-point helloWorld
          --set-env-vars=MESSAGE="${{ secrets.HELLO_WORLD_MESSAGE }}"

      - name: Set policy for gha-sandbox-hello-world
        run: >-
          gcloud functions set-iam-policy
          gha-sandbox-${{ env.ENVIRONMENT_PREFIX }}-hello-world
          policy.json

  deploy-hello-world-production:
    if: github.ref == 'refs/heads/release'
    environment: Production
    env:
      ENVIRONMENT_PREFIX: production
    needs: [ci-hello-world, ci-hello-world-with-action]
    defaults:
      run:
        working-directory: hello-world
    name: Deploy hello-world to Production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SOFTWAREPARK_SANDBOX_SERVICE_ACCOUNT }}
          project_id: softwarepark-sandbox
          export_default_credentials: true

      - name: Deploy gha-sandbox-hello-world
        run: >-
          gcloud functions deploy
          gha-sandbox-${{ env.ENVIRONMENT_PREFIX }}-hello-world
          --trigger-http
          --runtime=nodejs12
          --entry-point helloWorld
          --set-env-vars=MESSAGE="${{ secrets.HELLO_WORLD_MESSAGE }}"

      - name: Set policy for gha-sandbox-hello-world
        run: >-
          gcloud functions set-iam-policy
          gha-sandbox-${{ env.ENVIRONMENT_PREFIX }}-hello-world
          policy.json