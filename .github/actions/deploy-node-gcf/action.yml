name: 'Deploy NodeJS Cloud Function'
description: 'Test, Lint, and Deploy a NodeJS Cloud Function'
inputs:
  working-directory:
    description: 'Directory of the cloud function'
    required: true
  test:
    description: 'Run the tests?'
    required: false
    default: true
  lint:
    description: 'Lint the code?'
    required: false
    default: true
  deploy:
    description: 'Deploy the function?'
    required: false
    default: true
  entry-point:
    description: 'Entry point of the function'
    required: false
    default: ""
  name:
    description: 'Name of the cloud function'
    required: false
    default: ""
  env-vars:
    description: 'Environment variables for the deployed function'
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Install Dependencies
      run: npm ci
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Test
      run: if [ "${{ inputs.test }}" == "true" ]; then npm run test; fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Lint
      run: if [ "${{ inputs.lint }}" == "true" ]; then npm run lint; fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Deploy Function
      run: >-
        if [ "${{ inputs.env-vars }}" != "" ]
        then
          SET_ENV_VARS="--set-env-vars ${{ inputs.env-vars }}"
        fi
        if [ "${{ inputs.deploy }}" == "true" ]
        then
          gcloud functions deploy
          ${{ inputs.name }}
          --trigger-http
          --runtime=nodejs12
          --entry-point ${{ inputs.entry-point }}
          $SET_ENV_VARS
        fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Set policy
      run: >-
        if [ "${{ inputs.deploy }}" == "true" ]
        then
          gcloud functions set-iam-policy
          ${{ inputs.name }}
          policy.json
        fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}